core_dependency_requires '*' cat
core_embed_snippet()
{
	core_embed_snippetEncoded cat "$@"
}

# MacOSX
# * Encode (has a trailing LF): base64 <file>
# * Decode: base64 -D <file>
# CoreUtils
# * Encode (line breaks and trailing line break unless using --wrap 0): base64 --wrap 0
# * Decode: base64 -d <file>
# uuencode -m is a non-starter (not installed by default on Ubuntu, although part of busybox and MacOSX)
core_dependency_requires '*' base64
_core_embed_snippetBase64Encoder()
{
	base64 --wrap 0
}
_core_embed_snippetBase64Decoder()
{
	base64 -d
}
core_embed_snippetBase64Encoded()
{
	core_embed_snippetEncoded _core_embed_snippetBase64Encoder "$@"
}

core_embed_snippetEncoded()
{
	local encoder="$1"
	shift 1
	
	local snippetName
	local snippetFilePath
	for snippetName in "$@"
	do
		if core_variable_isSet _core_embed_snippet_${snippetName}; then
			continue
		fi
		
		snippetFilePath="$_program_libPath"/"${_program_name}"/"$snippetName".snippet
		if ! core_path_isReadableNonEmptyFilePath "$snippetFilePath"; then
			core_exitError $core_commandLine_exitCode_SOFTWARE "Snippet '$snippetName' does not exist as a readable, non-empty file at '$snippetFilePath'"
		fi
		_core_embed_snippet_${snippetName}="$($encoder "$snippetFilePath")"
		core_dependency_declares _core_embed_snippet_${snippetName}
	done
}

core_dependency_requires '*' cat
_core_embed_snippetRawDecoder()
{
	cat
}
core_embed_retrieve()
{
	local decoder="$1"
	local snippetName="$2"
	printf '%s' core_dependency_declares _core_embed_snippet_${snippetName} | $decoder
}
